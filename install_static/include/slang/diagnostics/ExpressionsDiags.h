//------------------------------------------------------------------------------
//! @file ExpressionsDiags.h
//! @brief Generated diagnostic enums for the Expressions subsystem
//
// SPDX-FileCopyrightText: Michael Popoloski
// SPDX-License-Identifier: MIT
//------------------------------------------------------------------------------
#pragma once

#include "slang/diagnostics/Diagnostics.h"

namespace slang::diag {

inline constexpr DiagCode ArgCannotBeEmpty(DiagSubsystem::Expressions, 0);
inline constexpr DiagCode ArgDoesNotExist(DiagSubsystem::Expressions, 1);
inline constexpr DiagCode AssertionArgNeedsRegExpr(DiagSubsystem::Expressions, 2);
inline constexpr DiagCode AssertionArgTypeMismatch(DiagSubsystem::Expressions, 3);
inline constexpr DiagCode AssertionArgTypeSequence(DiagSubsystem::Expressions, 4);
inline constexpr DiagCode AssertionDelayFormalType(DiagSubsystem::Expressions, 5);
inline constexpr DiagCode AssertionFuncArg(DiagSubsystem::Expressions, 6);
inline constexpr DiagCode AssertionOutputLocalVar(DiagSubsystem::Expressions, 7);
inline constexpr DiagCode AssertionPortTypedLValue(DiagSubsystem::Expressions, 8);
inline constexpr DiagCode AssignToCHandle(DiagSubsystem::Expressions, 9);
inline constexpr DiagCode AssignToNet(DiagSubsystem::Expressions, 10);
inline constexpr DiagCode AssignmentNotAllowed(DiagSubsystem::Expressions, 11);
inline constexpr DiagCode AssignmentPatternAssociativeType(DiagSubsystem::Expressions, 12);
inline constexpr DiagCode AssignmentPatternDynamicDefault(DiagSubsystem::Expressions, 13);
inline constexpr DiagCode AssignmentPatternDynamicType(DiagSubsystem::Expressions, 14);
inline constexpr DiagCode AssignmentPatternKeyDupDefault(DiagSubsystem::Expressions, 15);
inline constexpr DiagCode AssignmentPatternKeyDupName(DiagSubsystem::Expressions, 16);
inline constexpr DiagCode AssignmentPatternKeyDupValue(DiagSubsystem::Expressions, 17);
inline constexpr DiagCode AssignmentPatternKeyExpr(DiagSubsystem::Expressions, 18);
inline constexpr DiagCode AssignmentPatternLValueDynamic(DiagSubsystem::Expressions, 19);
inline constexpr DiagCode AssignmentPatternMissingElements(DiagSubsystem::Expressions, 20);
inline constexpr DiagCode AssignmentPatternNoContext(DiagSubsystem::Expressions, 21);
inline constexpr DiagCode AssignmentPatternNoMember(DiagSubsystem::Expressions, 22);
inline constexpr DiagCode AssignmentRequiresParens(DiagSubsystem::Expressions, 23);
inline constexpr DiagCode AssignmentToConstVar(DiagSubsystem::Expressions, 24);
inline constexpr DiagCode AutoFromNonBlockingTiming(DiagSubsystem::Expressions, 25);
inline constexpr DiagCode AutoFromNonProcedural(DiagSubsystem::Expressions, 26);
inline constexpr DiagCode AutoFromStaticInit(DiagSubsystem::Expressions, 27);
inline constexpr DiagCode AutoVarToRefStatic(DiagSubsystem::Expressions, 28);
inline constexpr DiagCode BadAssignment(DiagSubsystem::Expressions, 29);
inline constexpr DiagCode BadAssignmentPatternType(DiagSubsystem::Expressions, 30);
inline constexpr DiagCode BadBinaryExpression(DiagSubsystem::Expressions, 31);
inline constexpr DiagCode BadCastType(DiagSubsystem::Expressions, 32);
inline constexpr DiagCode BadConcatExpression(DiagSubsystem::Expressions, 33);
inline constexpr DiagCode BadConditionalExpression(DiagSubsystem::Expressions, 34);
inline constexpr DiagCode BadConversion(DiagSubsystem::Expressions, 35);
inline constexpr DiagCode BadIndexExpression(DiagSubsystem::Expressions, 36);
inline constexpr DiagCode BadIntegerCast(DiagSubsystem::Expressions, 37);
inline constexpr DiagCode BadReplicationExpression(DiagSubsystem::Expressions, 38);
inline constexpr DiagCode BadSetMembershipType(DiagSubsystem::Expressions, 39);
inline constexpr DiagCode BadSliceType(DiagSubsystem::Expressions, 40);
inline constexpr DiagCode BadStreamCast(DiagSubsystem::Expressions, 41);
inline constexpr DiagCode BadStreamContext(DiagSubsystem::Expressions, 42);
inline constexpr DiagCode BadStreamExprType(DiagSubsystem::Expressions, 43);
inline constexpr DiagCode BadStreamSize(DiagSubsystem::Expressions, 44);
inline constexpr DiagCode BadStreamSlice(DiagSubsystem::Expressions, 45);
inline constexpr DiagCode BadStreamSourceType(DiagSubsystem::Expressions, 46);
inline constexpr DiagCode BadStreamTargetType(DiagSubsystem::Expressions, 47);
inline constexpr DiagCode BadStreamWithOrder(DiagSubsystem::Expressions, 48);
inline constexpr DiagCode BadStreamWithType(DiagSubsystem::Expressions, 49);
inline constexpr DiagCode BadUnaryExpression(DiagSubsystem::Expressions, 50);
inline constexpr DiagCode BadValueRange(DiagSubsystem::Expressions, 51);
inline constexpr DiagCode BlockingAssignToFreeVar(DiagSubsystem::Expressions, 52);
inline constexpr DiagCode CHandleInAssertion(DiagSubsystem::Expressions, 53);
inline constexpr DiagCode CannotCompareTwoInstances(DiagSubsystem::Expressions, 54);
inline constexpr DiagCode CannotIndexScalar(DiagSubsystem::Expressions, 55);
inline constexpr DiagCode CantModifyConst(DiagSubsystem::Expressions, 56);
inline constexpr DiagCode ChainedMethodParens(DiagSubsystem::Expressions, 57);
inline constexpr DiagCode CheckerArgCannotBeEmpty(DiagSubsystem::Expressions, 58);
inline constexpr DiagCode ClassMemberInAssertion(DiagSubsystem::Expressions, 59);
inline constexpr DiagCode ClassPrivateMembersBitstream(DiagSubsystem::Expressions, 60);
inline constexpr DiagCode ClockVarAssignConcat(DiagSubsystem::Expressions, 61);
inline constexpr DiagCode ClockVarBadTiming(DiagSubsystem::Expressions, 62);
inline constexpr DiagCode ClockVarOutputRead(DiagSubsystem::Expressions, 63);
inline constexpr DiagCode ClockVarTargetAssign(DiagSubsystem::Expressions, 64);
inline constexpr DiagCode ConcatWithStringInt(DiagSubsystem::Expressions, 65);
inline constexpr DiagCode ConstVarToRef(DiagSubsystem::Expressions, 66);
inline constexpr DiagCode CopyClassTarget(DiagSubsystem::Expressions, 67);
inline constexpr DiagCode CoverOptionImmutable(DiagSubsystem::Expressions, 68);
inline constexpr DiagCode CoverageExprVar(DiagSubsystem::Expressions, 69);
inline constexpr DiagCode CoverageSampleFormal(DiagSubsystem::Expressions, 70);
inline constexpr DiagCode CycleDelayNonClock(DiagSubsystem::Expressions, 71);
inline constexpr DiagCode DuplicateArgAssignment(DiagSubsystem::Expressions, 72);
inline constexpr DiagCode DynamicNotProcedural(DiagSubsystem::Expressions, 73);
inline constexpr DiagCode EmptyArgNotAllowed(DiagSubsystem::Expressions, 74);
inline constexpr DiagCode EmptyConcatNotAllowed(DiagSubsystem::Expressions, 75);
inline constexpr DiagCode EnumValueSizeMismatch(DiagSubsystem::Expressions, 76);
inline constexpr DiagCode EventExprAssertionArg(DiagSubsystem::Expressions, 77);
inline constexpr DiagCode EventExpressionFuncArg(DiagSubsystem::Expressions, 78);
inline constexpr DiagCode ExpectedIterationExpression(DiagSubsystem::Expressions, 79);
inline constexpr DiagCode ExpectedIteratorName(DiagSubsystem::Expressions, 80);
inline constexpr DiagCode ExpectedNetDelay(DiagSubsystem::Expressions, 81);
inline constexpr DiagCode ExprMustBeIntegral(DiagSubsystem::Expressions, 82);
inline constexpr DiagCode ExpressionNotAssignable(DiagSubsystem::Expressions, 83);
inline constexpr DiagCode ExpressionNotCallable(DiagSubsystem::Expressions, 84);
inline constexpr DiagCode InOutUWireConn(DiagSubsystem::Expressions, 85);
inline constexpr DiagCode InOutVarPortConn(DiagSubsystem::Expressions, 86);
inline constexpr DiagCode IncDecNotAllowed(DiagSubsystem::Expressions, 87);
inline constexpr DiagCode IndexValueInvalid(DiagSubsystem::Expressions, 88);
inline constexpr DiagCode InputPortAssign(DiagSubsystem::Expressions, 89);
inline constexpr DiagCode InterconnectReference(DiagSubsystem::Expressions, 90);
inline constexpr DiagCode InterfacePortInvalidExpression(DiagSubsystem::Expressions, 91);
inline constexpr DiagCode InvalidArgumentExpr(DiagSubsystem::Expressions, 92);
inline constexpr DiagCode InvalidBinsMatches(DiagSubsystem::Expressions, 93);
inline constexpr DiagCode InvalidBinsTarget(DiagSubsystem::Expressions, 94);
inline constexpr DiagCode InvalidClassAccess(DiagSubsystem::Expressions, 95);
inline constexpr DiagCode InvalidExtendsDefault(DiagSubsystem::Expressions, 96);
inline constexpr DiagCode InvalidMemberAccess(DiagSubsystem::Expressions, 97);
inline constexpr DiagCode InvalidRefArg(DiagSubsystem::Expressions, 98);
inline constexpr DiagCode InvalidSuperNewDefault(DiagSubsystem::Expressions, 99);
inline constexpr DiagCode IteratorArgsWithoutWithClause(DiagSubsystem::Expressions, 100);
inline constexpr DiagCode LetHierarchical(DiagSubsystem::Expressions, 101);
inline constexpr DiagCode LocalFormalVarMultiAssign(DiagSubsystem::Expressions, 102);
inline constexpr DiagCode LocalVarEventExpr(DiagSubsystem::Expressions, 103);
inline constexpr DiagCode LocalVarOutputEmptyMatch(DiagSubsystem::Expressions, 104);
inline constexpr DiagCode MissingConstraintBlock(DiagSubsystem::Expressions, 105);
inline constexpr DiagCode MissingInvocationParens(DiagSubsystem::Expressions, 106);
inline constexpr DiagCode MissingReturnValue(DiagSubsystem::Expressions, 107);
inline constexpr DiagCode MissingReturnValueProd(DiagSubsystem::Expressions, 108);
inline constexpr DiagCode MixedVarAssigns(DiagSubsystem::Expressions, 109);
inline constexpr DiagCode MixingOrderedAndNamedArgs(DiagSubsystem::Expressions, 110);
inline constexpr DiagCode MultipleAlwaysAssigns(DiagSubsystem::Expressions, 111);
inline constexpr DiagCode MultipleContAssigns(DiagSubsystem::Expressions, 112);
inline constexpr DiagCode MultipleUDNTDrivers(DiagSubsystem::Expressions, 113);
inline constexpr DiagCode MultipleUWireDrivers(DiagSubsystem::Expressions, 114);
inline constexpr DiagCode NameListWithScopeRandomize(DiagSubsystem::Expressions, 115);
inline constexpr DiagCode NamedArgNotAllowed(DiagSubsystem::Expressions, 116);
inline constexpr DiagCode NewArrayTarget(DiagSubsystem::Expressions, 117);
inline constexpr DiagCode NewClassTarget(DiagSubsystem::Expressions, 118);
inline constexpr DiagCode NewInterfaceClass(DiagSubsystem::Expressions, 119);
inline constexpr DiagCode NewVirtualClass(DiagSubsystem::Expressions, 120);
inline constexpr DiagCode NoCommonComparisonType(DiagSubsystem::Expressions, 121);
inline constexpr DiagCode NoImplicitConversion(DiagSubsystem::Expressions, 122);
inline constexpr DiagCode NonProceduralFuncArg(DiagSubsystem::Expressions, 123);
inline constexpr DiagCode NonblockingAssignmentToAuto(DiagSubsystem::Expressions, 124);
inline constexpr DiagCode NonblockingDynamicAssign(DiagSubsystem::Expressions, 125);
inline constexpr DiagCode NotBooleanConvertible(DiagSubsystem::Expressions, 126);
inline constexpr DiagCode PathPulseInExpr(DiagSubsystem::Expressions, 127);
inline constexpr DiagCode PatternStructTooFew(DiagSubsystem::Expressions, 128);
inline constexpr DiagCode PatternStructTooMany(DiagSubsystem::Expressions, 129);
inline constexpr DiagCode PatternStructType(DiagSubsystem::Expressions, 130);
inline constexpr DiagCode PatternTaggedType(DiagSubsystem::Expressions, 131);
inline constexpr DiagCode PortConnArrayMismatch(DiagSubsystem::Expressions, 132);
inline constexpr DiagCode RangeSelectAssociative(DiagSubsystem::Expressions, 133);
inline constexpr DiagCode RangeWidthOverflow(DiagSubsystem::Expressions, 134);
inline constexpr DiagCode RecursiveLet(DiagSubsystem::Expressions, 135);
inline constexpr DiagCode RecursivePropArgExpr(DiagSubsystem::Expressions, 136);
inline constexpr DiagCode RecursivePropNegation(DiagSubsystem::Expressions, 137);
inline constexpr DiagCode RecursivePropTimeAdvance(DiagSubsystem::Expressions, 138);
inline constexpr DiagCode RecursiveSequence(DiagSubsystem::Expressions, 139);
inline constexpr DiagCode RefArgForkJoin(DiagSubsystem::Expressions, 140);
inline constexpr DiagCode RefTypeMismatch(DiagSubsystem::Expressions, 141);
inline constexpr DiagCode ReplicationZeroOutsideConcat(DiagSubsystem::Expressions, 142);
inline constexpr DiagCode SelectAfterRangeSelect(DiagSubsystem::Expressions, 143);
inline constexpr DiagCode SelectEndianDynamic(DiagSubsystem::Expressions, 144);
inline constexpr DiagCode SelectEndianMismatch(DiagSubsystem::Expressions, 145);
inline constexpr DiagCode SelectOfVectoredNet(DiagSubsystem::Expressions, 146);
inline constexpr DiagCode SpecifyPathBadReference(DiagSubsystem::Expressions, 147);
inline constexpr DiagCode SpecifyPathConditionExpr(DiagSubsystem::Expressions, 148);
inline constexpr DiagCode SpecparamInConstant(DiagSubsystem::Expressions, 149);
inline constexpr DiagCode TaggedUnionMissingInit(DiagSubsystem::Expressions, 150);
inline constexpr DiagCode TaggedUnionTarget(DiagSubsystem::Expressions, 151);
inline constexpr DiagCode TaskFromFinal(DiagSubsystem::Expressions, 152);
inline constexpr DiagCode TaskFromFunction(DiagSubsystem::Expressions, 153);
inline constexpr DiagCode TimingControlNotAllowed(DiagSubsystem::Expressions, 154);
inline constexpr DiagCode TooFewArguments(DiagSubsystem::Expressions, 155);
inline constexpr DiagCode TooManyArguments(DiagSubsystem::Expressions, 156);
inline constexpr DiagCode UnboundedNotAllowed(DiagSubsystem::Expressions, 157);
inline constexpr DiagCode UnconnectedArg(DiagSubsystem::Expressions, 158);
inline constexpr DiagCode UnexpectedClockingExpr(DiagSubsystem::Expressions, 159);
inline constexpr DiagCode UnexpectedConstraintBlock(DiagSubsystem::Expressions, 160);
inline constexpr DiagCode UnexpectedWithClause(DiagSubsystem::Expressions, 161);
inline constexpr DiagCode UnpackedConcatAssociative(DiagSubsystem::Expressions, 162);
inline constexpr DiagCode UnpackedConcatSize(DiagSubsystem::Expressions, 163);
inline constexpr DiagCode UserDefPartialDriver(DiagSubsystem::Expressions, 164);
inline constexpr DiagCode ValueRangeUnbounded(DiagSubsystem::Expressions, 165);
inline constexpr DiagCode VirtualIfaceDefparam(DiagSubsystem::Expressions, 166);
inline constexpr DiagCode VoidAssignment(DiagSubsystem::Expressions, 167);
inline constexpr DiagCode WithClauseNotAllowed(DiagSubsystem::Expressions, 168);
inline constexpr DiagCode WrongNumberAssignmentPatterns(DiagSubsystem::Expressions, 169);
inline constexpr DiagCode FloatBoolConv(DiagSubsystem::Expressions, 170);
inline constexpr DiagCode IgnoredSlice(DiagSubsystem::Expressions, 171);
inline constexpr DiagCode ImplicitConvert(DiagSubsystem::Expressions, 172);
inline constexpr DiagCode IndexOOB(DiagSubsystem::Expressions, 173);
inline constexpr DiagCode InputPortCoercion(DiagSubsystem::Expressions, 174);
inline constexpr DiagCode IntBoolConv(DiagSubsystem::Expressions, 175);
inline constexpr DiagCode NegativeTimingLimit(DiagSubsystem::Expressions, 176);
inline constexpr DiagCode NonblockingInFinal(DiagSubsystem::Expressions, 177);
inline constexpr DiagCode OutputPortCoercion(DiagSubsystem::Expressions, 178);
inline constexpr DiagCode PortWidthExpand(DiagSubsystem::Expressions, 179);
inline constexpr DiagCode PortWidthTruncate(DiagSubsystem::Expressions, 180);
inline constexpr DiagCode RangeOOB(DiagSubsystem::Expressions, 181);
inline constexpr DiagCode RangeWidthOOB(DiagSubsystem::Expressions, 182);
inline constexpr DiagCode ReversedValueRange(DiagSubsystem::Expressions, 183);
inline constexpr DiagCode SignConversion(DiagSubsystem::Expressions, 184);
inline constexpr DiagCode SpecifyBlockParam(DiagSubsystem::Expressions, 185);
inline constexpr DiagCode UnsizedInConcat(DiagSubsystem::Expressions, 186);
inline constexpr DiagCode UselessCast(DiagSubsystem::Expressions, 187);
inline constexpr DiagCode WidthExpand(DiagSubsystem::Expressions, 188);
inline constexpr DiagCode WidthTruncate(DiagSubsystem::Expressions, 189);

}
